선형 자료 구조
데크 ( Dequeue )
우선순위 큐 ( Priority Queue )
Deque -> Double-Ended Queue ( Stack & Queue )

Python = 동적 프로그래밍 언어(Dynamic Programming Language)
데크는 양쪽에서 삭제와 삽입을 모두 처리할 수 있으며, 스택과 큐의 특징을 모두 갖고 있다.


구현할 때 사용되는 자료형
Dequeue : Array, Linked List(Doubly Linked List) [Python_Algorithm 09-26]
Priority Queue : ★★★Heap★★★

p.s. Priority Queue vs heapq
    파이썬에서 우선순위 큐는 queue 모듈의 PriorityQueue 클래스를 이용해 사용할 수 있다.
    우선 순위 큐는 힙을 사용해 주로 구현하며, 파이썬의 PriorityQueue조차 내부적으로 heapq를 사용하여 구현

    PriorityQueue는 스레드 세이프 클래스라는 점이며, heapq 모듈은 스레드 세이프를 보장하지 않는다.
    파이썬은 GIL의 특성상 멀티 스레딩이 거의 의미가 없기 때문에 대부분 멀티 프로세싱으로 활용한다는 점을
    생각해보면, PriorityQueue 모듈의 멀티 스레딩 지원은 사실 큰 의미가 없다. 또한 스레드 세이프를
    보장한다는 얘기는 내부적으로 락킹(Locking)을 제공한다는 의미이므로 락킹 오버헤드(Locking Overhead)가
    발생해 성능에 영향을 끼친다. 따라서 굳이 멀티 스레드로 구현할 게 아니라면 PriorityQueue 모듈은
    사용할 필요가 없다.

    실무에서도 우선순위 큐는 대부분 heapq로 구현하고 있다...


    ★★★★★ 파이썬은 왜 느린가? ★★★★★
    잔역 프린터 락(Global Interpreter Lock, 이하 GIL)이 아닐까 생각이 든다. - 하나의 스레드가 자원을 독점
    파이썬 최초의 공식 구현체인 CPython은 개발 초기에 번거로운 동시성 관리를 편리하게 하고
    스레드 세이프 하지 않은 CPython의 메모리 관리를 쉽게 하기 위해, GIL로 파이썬 객체에 대한
    접근을 제한하는 형태로 설계했다.