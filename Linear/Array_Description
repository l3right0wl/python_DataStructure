선형 자료 구조
배열 ( Array )
메모리 공간 기반의 연속 방식 => ㅁㅁㅁㅁ | ㅁㅁㅁㅁ | ㅁㅁㅁㅁ

Python = 동적 프로그래밍 언어(Dynamic Programming Language)
동적 배열인 ★리스트(List)만 제공 => 크기를 지정하지 않고 자동으로 리사이징 하는 배열
초깃값을 작게 잡아 배열을 생성하고, 데이터가 추가되면서 다 채워지면, 늘려주고 모두 복사하는 식
더블링 구조 (0, 4, 8, 16, 25, 35...) 전체적으로는 약 1.125배
p.s. 정적 배열은 따로 제공하지 않고 있음

삽입(append), 삭제(pop), 조회(index) : O(1)
더블링이 필요한 만큼 용량이 차게 되면,
새로운 메모리 공간에 더 큰 크기의 배열을 할당하고 기존 데이터를 복사하는 작업이 필요하므로 : O(n)


p.s. 자료구조, 자료형, 추상 자료형 
    
    ★자료형과 자료구조를 많이 혼동★ 
    내가 실제로 헷갈렸던 이유
    ex) 자료형인 list와 자료구조인 배열 (python에선 동적배열인)list를 혼동했다. 
    
    자료형 ⊂ 자료구조 
    자료형이란 컴파일러 또는 인터프리터에게 프로그래머가 어떻게 사용하는지를 알려주는 일종의 데이터 속성(Attribute)이다. 
    좀 더 쉽게 말하자면 자료형은 자료구조에 비해 훨씬 더 구체적이며, 특정 언어에서 자료형이라 함은 정수(Integer), 실수(Floating-Point Number), 문자열(String)등 
    해당 언어에서 지원하는 원시 자료형까지 포함하는 모든 자료의 유형을 말한다. 
    
    자료구조란 데이터에 효율적으로 접근하고 조작하기 위한 데이터의 조직, 관리, 저장 구조를 말한다. 
    자료구조는 일반적으로 원시 자료형을 기반으로 하는 배열, 연결 리스트, 객체(Object) 등을 말하며, 
    자료형의 관점에서 보자면 여러 원시 자료형을 조합한 자료구조는 복합 자료형(Composite Data Type)이 된다. 
    
    추상 자료형(Abstract Data Type)은 일반적으로 줄여서 ADT라 부르며 자료형에 대한 수학적 모델을 지칭한다.
    좀 더 쉽게 정리하자면, ADT란 해당 유형의 자료에 대한 연산들을 명기한 것이다. 
    ADT는 행동만을 정의할 뿐 실제 구현 방법은 명시하지 않는다. 이런 점에서 자료구조와는 다르다. 
